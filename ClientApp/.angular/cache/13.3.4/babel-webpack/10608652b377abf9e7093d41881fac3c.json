{"ast":null,"code":"import { user } from \"../../shared/Model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ng-angular-popup\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction LoginComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onSignIn();\n    });\n    i0.ɵɵtext(1, \"Sign In\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵelement(1, \"span\", 19);\n    i0.ɵɵtext(2, \" Signing in... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(loginserv, route, toast) {\n      this.loginserv = loginserv;\n      this.route = route;\n      this.toast = toast;\n      this.user = new user();\n      this.userStore = new user();\n      this.isLoading = false;\n      this._temp = [];\n    }\n\n    ngOnInit() {}\n\n    onSignIn() {\n      if (this.user.username != '' && this.user.password != '') {\n        this.isLoading = true;\n        this.loginserv.LoginCheck(this.user).subscribe(ack => {\n          if (ack) {\n            this.getUserDetail(); //this.toast.success({ detail: \"Success\", summary: 'Logged In', duration: 3000 });\n            //this.route.navigate(['/prlist']);\n          } else {\n            this.toast.error({\n              detail: \"Error\",\n              summary: 'Enter valid username and password ',\n              duration: 3000\n            });\n            this.isLoading = false;\n          }\n        });\n      } else {\n        this.toast.error({\n          detail: \"Error\",\n          summary: 'Fields cannot be empty',\n          duration: 3000\n        });\n        this.isLoading = false;\n      }\n    }\n\n    getUserDetail() {\n      this.loginserv.getUserDetails().subscribe(udata => {\n        if (udata != undefined) {\n          sessionStorage.setItem('1', udata.UserId);\n          sessionStorage.setItem('2', udata.Username);\n          sessionStorage.setItem('3', udata.Role);\n          sessionStorage.setItem('4', udata.Designation);\n          sessionStorage.setItem('5', 'VerySecretToken');\n          this.toast.success({\n            detail: \"Success\",\n            summary: 'Logged In',\n            duration: 3000\n          });\n          this.route.navigate(['/prlist']);\n        }\n      });\n      this.isLoading = false;\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NgToastService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 23,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-end\", \"mt-5\"], [1, \"col\"], [1, \"col\", \"text-center\"], [\"src\", \"../../../assets/Logo1.jpg\", 2, \"width\", \"18rem\", \"height\", \"15rem\"], [1, \"card\", \"text-center\", 2, \"width\", \"20rem\", \"height\", \"20rem\"], [1, \"card-header\"], [\"src\", \"../../../assets/Securelogo.jpg\", 2, \"width\", \"1.5rem\", \"height\", \"1.5rem\"], [1, \"card-body\", \"mt-auto\"], [1, \"card-text\"], [1, \"form-floating\", \"mt-3\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"aria-describedby\", \"username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"username\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"submit\", \"class\", \"btn btn-primary w-50 mt-3\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-primary w-50 mt-3\", \"type\", \"button\", \"disabled\", \"\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-50\", \"mt-3\", 3, \"click\"], [\"type\", \"button\", \"disabled\", \"\", 1, \"btn\", \"btn-primary\", \"w-50\", \"mt-3\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 5)(7, \"div\", 6);\n        i0.ɵɵelement(8, \"img\", 7);\n        i0.ɵɵtext(9, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9)(12, \"form\")(13, \"div\", 10)(14, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.user.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"label\", 12);\n        i0.ɵɵtext(16, \"Username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 10)(18, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.user.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(21, LoginComponent_button_21_Template, 2, 0, \"button\", 15);\n        i0.ɵɵtemplate(22, LoginComponent_button_22_Template, 3, 0, \"button\", 16);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.NgIf],\n    styles: [\"\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}